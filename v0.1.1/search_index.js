var documenterSearchIndex = {"docs":
[{"location":"","page":"Home","title":"Home","text":"CurrentModule = IntensityScans","category":"page"},{"location":"#IntensityScans","page":"Home","title":"IntensityScans","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"","category":"page"},{"location":"","page":"Home","title":"Home","text":"Modules = [IntensityScans]","category":"page"},{"location":"#IntensityScans.IntensityScan","page":"Home","title":"IntensityScans.IntensityScan","text":"Input:        xyz: The handle of desired xyz stage      scope: Handle of desired scope    channel: This input decides which channel the scope will read from. sample_size: The amount of samples desired to be taken.\n\nEx.\n\nlts = initialize(ThorlabsLTS150)\nscope = initialize(Scope350MHz)\n# Sample size 100, read from scope on channel 1\nhydrophone = IntensityScan(lts, scope, 100, 1)\n\n\n\n\n\n","category":"type"},{"location":"#IntensityScans.scan_x-Tuple{IntensityScan,Any,Any}","page":"Home","title":"IntensityScans.scan_x","text":"scan_x(scanner, x_range, x_num_scans; kwargs..)\n\nMove along the x axis and grab data based on a fixed increment.\n\nArguments\n\nscanner::IntensityScan: the structure for all controller connections.\nx_range: An array or tuple that contains the start and end             point of the desired range in the x-direction.            (Must be 1 or 2 elements long)\nx_num_scans::Int: The number of points/scans the user desires                      to record along the x-axis.\n\nKeywords\n\nverbose::Bool: Optional, defaults to: true\n\nReturns\n\nScan1D\n\nExample\n\nxyz_handle = initialize(ThorlabsLTS150)\nscope_handle = initialize(Scope350MHz)\n# Sample size 100, read from scope on channel 1\nscanner_handle = IntensityScan(xyz_handle, scope_handle, 100, 1)\n\nscan_range_x = [0, 2]\nnum_points_x = 5\n\nscan_info_x = scan_x(scanner_handle, scan_range_x, num_points_x)\n\n\n\n\n\n","category":"method"},{"location":"#IntensityScans.scan_xy-NTuple{5,Any}","page":"Home","title":"IntensityScans.scan_xy","text":"scan_xy(scanner, x_axis_range, x_axis_num_scans, y_axis_range, y_axis_num_scans; kwargs..)\n\nThis function grabs data along the xy-plane. It holds the y-position constant and moves along the x axis until it reaches the last x point  and then changes the y-position and repeats. There are five mandatory  inputs and one optional input that is used only when this function is called by other functions and the printed messages should be  surpressed. The user usually doesn't have to use the variable called.\n\nArguments\n\nscanner: the structure for all controller connections.\nx_axis_range::Array: An array that contains the start and end point                        of the desired range in the x-direction.                        (Must be 1 or 2 elements long)\nx_axis_num_scans::Int: The number of points/scans the user desires to                          record along the x-axis.\ny_axis_range::Array: Contains the start and end point                        of the desired range in the                        y-direction.                        (Must be 1 or 2 elements long)\ny_axis_num_scans::Int: The number of points/scans the user desires                           to record along the y-axis.\n\nKeywords\n\nverbose::Bool: Optional, defaults to: true\n\nReturns\n\nScan2D\n\nExample\n\nscanner = IntensityScan(initialize(lts150), initialize(Scope350MHz), 1, 100)\nscan_range_x = [0 2]; scan_range_y = [0 2];\nnum_points_x = 5; num_points_y =10;\n\nwave_info_xz = scan_xy(\n    scanner, scan_range_x, num_points_x, scan_range_y, num_points_y\n)\n\n\n\n\n\n","category":"method"},{"location":"#IntensityScans.scan_xyz-NTuple{7,Any}","page":"Home","title":"IntensityScans.scan_xyz","text":"TODO: Rewrite function waveinfovol = kyhydroscanvolume(settings, xrange, xnum, yrange, ynum, zrange, znum, called)  waveinfovol = kyhydroscanvolume(settings, xrange, xnum, yrange, ynum, zrange, znum, called)\n\nThis function grabs data along the xyz-axis. It holds the z-position  constant and calls the xy_scan function. This function scans along the x  axis until it reaches the last x point and then moves along the y axis  and repeats the process. After completing the xy scan, the z-position is  changed and then the process is repeated. There are five mantadory inputs  and one optional input that is used only when this function is called by   other functions and the printed messages should be surpressed. The user   usually doesn't have to use the variable called.\n\nInput:        settings: The structure for all controller connections.         xrange: A 1x2 or 1x1 array that contains the start and end point                  of the desired range in the x-direction.           xnum: The number of points the user desires to record along the                  x-axis.         yrange: A 1x2 or 1x1 array that contains the start and end point                  of the desired range in the y-direction.           ynum: The number of points the user desires to record along the                  y-axis.         zrange: A 1x2 or 1x1 array that contains the start and end point                  of the desired range in the z-direction.           znum: The number of points the user desires to record along the                  z-axis.\n\nOutput:    waveinfoxy: A structure that contains the data of the waveforms and                  the coordinates travelled. The waveforms are stored under                  waveinfovol.waveform and the coordinates travelled are                   stored under waveinfo_vol.coordinates. The coordinates                   are the (x, y, z) coordinates along the path that the                   function took.\n\nExample:  scanrangex = [0 2]; scanrangey = [0 2]; scanrangez = [0 2];  numpointsx = 5; numpointsy = 10; numpointsz = 10;  waveinfovol = kyhydroscanvolume(settings, scanrangex, numpointsx, scanrangey, numpointsy, scanrangez, numpoints_z)\n\n\n\n\n\n","category":"method"},{"location":"#IntensityScans.scan_y-Tuple{Any,Any,Any}","page":"Home","title":"IntensityScans.scan_y","text":"scan_y(scanner, y_axis_range, y_axis_num_scans; kwargs..)\n\nThis function moves along the y axis and grabs data based on a fixed increment passed by the user. \n\nArguments\n\nscanner: the structure for all controller connections.\ny_axis_range::Array: Contains the start and end point                        of the desired range in the                        y-direction.                        (Must be 1 or 2 elements long)\ny_axis_num_scans::Int: The number of points/scans the user desires                           to record along the y-axis.\n\nKeywords\n\nverbose::Bool: Optional, defaults to: true\n\nReturns\n\nScan1D\n\nExample\n\nxyz_handle = initialize(ThorlabsLTS150)\nscope_handle = initialize(Scope350MHz)\n# Sample size 100, read from scope on channel 1\nscan_handle = IntensityScan(xyz_handle, scope_handle, 100, 1)\n\nscan_range_y = [0 2]\nnum_points_y =10\n\nscan_info_y = scan_y(scan_handle, scan_range_y, num_points_y)\n\n\n\n\n\n","category":"method"},{"location":"#IntensityScans.scan_z-Tuple{Any,Any,Any}","page":"Home","title":"IntensityScans.scan_z","text":"scan_z(scan_handle, z_scan_range, num_scans)\n\nThis function moves along the z axis and grabs data based on a fixed increment passed by the user. \n\nArguments\n\nscanner: the structure for all controller connections.\nz_axis_range::Array: Contains the start and end point                        of the desired range in the                        z-direction.                        (Must be 1 or 2 elements long)\nz_axis_num_scans::Int: The number of points/scans the user desires                           to record along the z-axis.\n\nKeywords\n\nverbose: Default true. When false the printed messages should be suppressed (normally used when this function is called by another function)\n\nReturns\n\nScan1D\n\nExample\n\nxyz_handle = initialize(ThorlabsLTS150)\nscope_handle = initialize(Scope350MHz)\n# Sample size 100, read from scope on channel 1\nscan_handle = IntensityScan(xyz_handle, scope_handle, 100, 1)\n\nscan_range = [0, 1]\nnum_scans = 5\nscan_info_z = scan_z(scan_handle, scan_range, num_scans)\n\n\n\n\n\n","category":"method"}]
}
